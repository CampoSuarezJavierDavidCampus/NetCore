// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descipcion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Domain.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Domain.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPersona")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<int?>("ProvinciaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoPersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("TipoPersonaId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Domain.PersonaProducto", b =>
                {
                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("IdPersona", "IdProducto");

                    b.HasIndex("PersonaId");

                    b.HasIndex("ProductoId");

                    b.ToTable("PersonaProductos");
                });

            modelBuilder.Entity("Domain.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descipcion")
                        .HasColumnType("longtext");

                    b.Property<double?>("IdMarca")
                        .HasColumnType("double");

                    b.Property<int?>("MarcaId")
                        .HasColumnType("int");

                    b.Property<double?>("Precio")
                        .HasColumnType("double");

                    b.Property<string>("Referencia")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Domain.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdRegion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("Domain.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<int?>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Regiones");
                });

            modelBuilder.Entity("Domain.TipoPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descipcion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoPersonas");
                });

            modelBuilder.Entity("Domain.Persona", b =>
                {
                    b.HasOne("Domain.Provincia", "Provincia")
                        .WithMany("Personas")
                        .HasForeignKey("ProvinciaId");

                    b.HasOne("Domain.TipoPersona", "TipoPersona")
                        .WithMany("Personas")
                        .HasForeignKey("TipoPersonaId");

                    b.Navigation("Provincia");

                    b.Navigation("TipoPersona");
                });

            modelBuilder.Entity("Domain.PersonaProducto", b =>
                {
                    b.HasOne("Domain.Persona", "Persona")
                        .WithMany("PersonaProductos")
                        .HasForeignKey("PersonaId");

                    b.HasOne("Domain.Producto", "Producto")
                        .WithMany("PersonaProductos")
                        .HasForeignKey("ProductoId");

                    b.Navigation("Persona");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Domain.Producto", b =>
                {
                    b.HasOne("Domain.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("MarcaId");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Domain.Provincia", b =>
                {
                    b.HasOne("Domain.Region", "Region")
                        .WithMany("Provincias")
                        .HasForeignKey("RegionId");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Domain.Region", b =>
                {
                    b.HasOne("Domain.Pais", "Pais")
                        .WithMany("Regions")
                        .HasForeignKey("PaisId");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Domain.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Domain.Pais", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Domain.Persona", b =>
                {
                    b.Navigation("PersonaProductos");
                });

            modelBuilder.Entity("Domain.Producto", b =>
                {
                    b.Navigation("PersonaProductos");
                });

            modelBuilder.Entity("Domain.Provincia", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Domain.Region", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("Domain.TipoPersona", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
